
Genomic Data Science - My Notes 

- DNA replication: 
	_Okazaki fragments: short sequences of DNA nucleotides (approximately 150 to 200 base pairs long in eukaryotes) which are synthesized discontinuously and later linked together by the enzyme DNA ligase to create the lagging strand during DNA replication.

- Origin of replication: 
	_ Occur when the behavior of #G - #C switches from decreasing to increasing. 
	_ It means that if 	you walk along the genome and see that #G - #C has been decreasing and suddenly starts increasing, this point is the origin of replication. 

- Skew diagram (idealistic case: E. coli): 
	_ A plot showing relation beteween #G-#C in the first k nucleotides of the genome, where x = nocleotide position and y = skew (#G-#C)
	_ Give us potential region to find DNA origin replication

- Frequent words problem: Find the DNA origin replication (idealistic case: E. coli)
	_ Naïve: assume that frequent words are simply k-mers.
	_ Mismatches Problem: when the input is a string Text and integers k and d, and you want to find all most frequent word k-mers with at most d mismatches in Text.

- Algorithms for finding regulatory motifs (Regiões regulatórias) in DNA
	_Clock gene
	_Regulatory proteins = (a.k.a) transcriptor factors 
	_ Implanted Motif Problem: In this problem, you are given a set of strings Dna, and integers k (motif length)and d(max number of mismatches in a motif). And you need to find all (k,d) motifs in Dna.
	_ Pairwise comparison between strings: not work in this case
	
	_Motif enumeration algorithm: 
		For each such k-mer, let generate all possible mutations with up to d nucleotides mutated, and for each such mutated k-mer a', let's check whether it appears as a (k,d)-mer in the string.
			
			Pseudocode:
			MotifEnumetarion (DNA, k, d):
				for each k-mer in a DNA
					for each k-mer a' differing from a at most d mutations
						if a' is a (k,d)-mer
							output a'
		LIMITATION: the model for implanting patterns doesn't properly reflect biological reality.
		When it is generated a set of genes, that are controlled by circadian clock, they cannot guarantee that all these genes have a particular pattern implanted. Some genes don't have any patterns implanted in their upstream region.
		
	_Regulatory Motifs:
		## Motif Finding Problem: 
			_ Look for a pattern that will serve as Consensus string (i.e., a pattern that minimizes the distance to motifs) over all choices of motifs in the underlying strings.
		- Consensus sequence (or canonical sequence):
			_ Calculated order of most frequent residues, either nucleotide or amino acid, found at each position in a sequence alignment. 
			_ Such information is important when considering sequence-dependent enzymes such as RNA polymerase.
		- Position-specific scoring matrix (PSSM): 
			_ Representation of motifs (patterns) in biological sequences.
			_ PWMs are often derived from a set of aligned sequences that are thought to be functionally related and have become an important part of many software tools for computational motif discovery. 
			_Is a count matrix: for each column in the alignment, the number of each alphabet letters is counted and totaled. The totals are displayed relative to some representative sequence along the left axis. This sequence may be the consesus sequence, but can also be any sequence in the alignment. 
		- Hamming Distance: 
			_ Appropriate distance in which the sequences of a set differ.
		- Score of the motifs matrix:
			_sum Hamming Distances between each string in the matrix and the consensus string
		
		## Median string problem:  
			_ A median string for the set of strings Dna is a k-mer pattern minimizing distance between pattern and DNA over all possible k-mers
		
		## Greedy Motif Search:
			_ Find the set of motifs across a number of DNA sequences that match each other  most closely
			_ Steps:
				Run through each possible k-mer in our first dna string;
				Identify the best matches for this initial k-mer within each of the following dna strings (using our profile-most probable function), creating a set of  motifs at each step
				Score each set of motifs to find and return the best scoring set.
			_ Pseudocode:
			GREEDYMOTIFSEARCH(Dna, k, t)
       			BestMotifs ← motif matrix formed by first k-mers in each string
                    from Dna
        		for each k-mer Motif in the first string from Dna
            		Motif1 ← Motif
            		for i = 2 to t
                		form Profile from motifs Motif1, …, Motifi - 1
                		Motifi ← Profile-most probable k-mer in the i-th string 
                		in Dna
            		Motifs ← (Motif1, …, Motift)
            		if Score(Motifs) < Score(BestMotifs)
                		BestMotifs ← Motifs
        		output BestMotifs

    	## Randomized Motif Search:
    		_ Randomized algorithms make random rather than deterministic decisions.
			_ No input can reliably produce worst-case results because the algorithm runs differently each time.
			_ Algorithms used in situations where no exact and fast algorithm is known.
    		_ Ex: Las Vegas: always produce the correct solution (ie. RandomizedQuickSort)), 	   Monte Carlo: do not always return the correct solution

    	##Gibbs sampling:


    	##Pseudocounts:



- Sequences alignment:
	## Smith–Waterman algorithm:
		_ Performs local sequence alignment; 
		_ Instead of looking at the entire sequence, the Smith–Waterman algorithm compares segments of all possible lengths and optimizes the similarity measure.
		_scoring system includes the substitution matrix and the gap-scoring scheme.
	
	## BLAST:
		_is more time-efficient than FASTA by searching only for the more significant patterns in the sequences, yet with comparative sensitivity. 
		_ Local short matches between the two sequences/local alignments

-------------------------------------------------------------------------------------------
Links:
http://bix.ucsd.edu/bioalgorithms/slides.php






